import{_ as i,c as a,o,a6 as t}from"./chunks/framework.fkSL6LTs.js";const l="/images/overleaf-git.png",f=JSON.parse('{"title":"Power Up Overleaf with TeXRA: A Git-Based Workflow","description":"","frontmatter":{},"headers":[],"relativePath":"guide/working-with-overleaf.md","filePath":"guide/working-with-overleaf.md"}'),s={name:"guide/working-with-overleaf.md"};function n(r,e,c,d,h,p){return o(),a("div",null,e[0]||(e[0]=[t('<h1 id="power-up-overleaf-with-texra-a-git-based-workflow" tabindex="-1">Power Up Overleaf with TeXRA: A Git-Based Workflow <a class="header-anchor" href="#power-up-overleaf-with-texra-a-git-based-workflow" aria-label="Permalink to &quot;Power Up Overleaf with TeXRA: A Git-Based Workflow&quot;">​</a></h1><p>Overleaf is the go-to platform for collaborative LaTeX writing. But what if you could combine its convenience with the advanced AI editing, local tool integration (like <code>latexdiff</code>), and VS Code power offered by TeXRA? You can, using Overleaf&#39;s Git integration!</p><p>This guide outlines a workflow to clone your Overleaf project, leverage TeXRA locally in VS Code, and seamlessly sync your changes back. Get the best of both worlds: Overleaf for collaboration, TeXRA for AI-powered local editing.</p><h2 id="why-bridge-overleaf-and-texra" tabindex="-1">Why Bridge Overleaf and TeXRA? <a class="header-anchor" href="#why-bridge-overleaf-and-texra" aria-label="Permalink to &quot;Why Bridge Overleaf and TeXRA?&quot;">​</a></h2><ul><li><strong>AI Superpowers:</strong> Apply TeXRA&#39;s specialized agents (<code>correct</code>, <code>polish</code>, <code>draw</code>, <code>paper2slide</code>, etc.) locally.</li><li><strong>Local Tooling:</strong> Use <code>latexdiff</code> for precise change tracking, local compilation for previews.</li><li><strong>VS Code Environment:</strong> Benefit from VS Code&#39;s features and extensions (like LaTeX Workshop).</li><li><strong>Robust Git:</strong> Employ granular version control, branching, and offline work locally.</li></ul><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Overleaf account with Git access enabled for your project (check Overleaf plans).</li><li>Git installed locally (<a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">git-scm.com</a>).</li><li>TeXRA installed in VS Code (<a href="./installation.html">Installation Guide</a>).</li></ul><h2 id="workflow-steps" tabindex="-1">Workflow Steps <a class="header-anchor" href="#workflow-steps" aria-label="Permalink to &quot;Workflow Steps&quot;">​</a></h2><h3 id="_1-get-overleaf-git-url-clone" tabindex="-1">1. Get Overleaf Git URL &amp; Clone <a class="header-anchor" href="#_1-get-overleaf-git-url-clone" aria-label="Permalink to &quot;1. Get Overleaf Git URL &amp; Clone&quot;">​</a></h3><ol><li><strong>Overleaf:</strong> Go to your project &gt; <strong>Menu</strong> &gt; <strong>Git</strong>. Copy the Git <strong>clone URL</strong> (<code>https://git.overleaf.com/YOUR_PROJECT_ID</code>). <img src="'+l+`" alt="Overleaf Git Menu"></li><li><strong>Local Terminal:</strong> Navigate to your desired local directory and run:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://git.overleaf.com/YOUR_PROJECT_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-local-folder</span></span></code></pre></div>(Enter Overleaf credentials if prompted).</li></ol><h3 id="_2-edit-locally-with-texra-in-vs-code" tabindex="-1">2. Edit Locally with TeXRA in VS Code <a class="header-anchor" href="#_2-edit-locally-with-texra-in-vs-code" aria-label="Permalink to &quot;2. Edit Locally with TeXRA in VS Code&quot;">​</a></h3><ol><li>Open <code>your-local-folder</code> in VS Code.</li><li>Use TeXRA as usual: <ul><li>Select files, agent, model.</li><li>Write instructions.</li><li>Execute (<i class="codicon codicon-play"></i>).</li><li>Review outputs (<code>*_r0_*.tex</code>, etc.).</li><li>Use <code>latexdiff</code> (<i class="codicon codicon-diff-single"></i>) or merge (<i class="codicon codicon-merge"></i>).</li><li>Leverage features like auto-extract (<i class="codicon codicon-wand"></i>) and tool options (<i class="codicon codicon-tools"></i>).</li><li>Optionally use LaTeX Workshop for local previews (<a href="./latex-compilation.html">Setup</a>).</li></ul></li></ol><h3 id="_3-commit-local-changes" tabindex="-1">3. Commit Local Changes <a class="header-anchor" href="#_3-commit-local-changes" aria-label="Permalink to &quot;3. Commit Local Changes&quot;">​</a></h3><p>As you work, commit changes frequently using VS Code&#39;s Source Control (<i class="codicon codicon-source-control"></i>) or the terminal:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Stage changes (e.g., all modified files)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Commit with a descriptive message</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Refined methodology section using TeXRA polish&quot;</span></span></code></pre></div><h3 id="_4-sync-back-to-overleaf" tabindex="-1">4. Sync Back to Overleaf <a class="header-anchor" href="#_4-sync-back-to-overleaf" aria-label="Permalink to &quot;4. Sync Back to Overleaf&quot;">​</a></h3><ol><li><strong>(Recommended) Pull:</strong> Fetch and merge any changes made directly on Overleaf since your last pull:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span></code></pre></div>Resolve any merge conflicts locally using standard Git tools.</li><li><strong>Push:</strong> Upload your local commits to Overleaf:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre></div>Refresh Overleaf in your browser to see the synced changes.</li></ol><h2 id="important-considerations" tabindex="-1">Important Considerations <a class="header-anchor" href="#important-considerations" aria-label="Permalink to &quot;Important Considerations&quot;">​</a></h2><ul><li><strong>Merge Conflicts:</strong> The biggest potential issue. Pulling changes from Overleaf <em>before</em> pushing your local work is the best way to minimize complex conflicts.</li><li><strong>Authentication:</strong> Git may occasionally re-prompt for Overleaf credentials.</li><li><strong>Large Projects:</strong> Be mindful of potential Overleaf Git size limitations.</li></ul><p>This Git-based workflow empowers you to enhance your Overleaf projects with TeXRA&#39;s powerful local AI and tooling capabilities, offering a flexible and efficient development cycle.</p><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li><a href="./best-practices.html">Best Practices</a>: Optimize your TeXRA usage.</li><li><a href="./latex-diff.html">LaTeX Diff</a>: Master change comparison.</li><li><a href="./intelligent-merge.html">Intelligent Merge</a>: Understand AI-assisted merging.</li></ul>`,22)]))}const u=i(s,[["render",n]]);export{f as __pageData,u as default};
