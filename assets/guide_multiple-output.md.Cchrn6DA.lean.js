import{_ as n,c as l,o,a6 as s,j as e,a as i,t as p}from"./chunks/framework.fkSL6LTs.js";const k=JSON.parse('{"title":"Handling Multiple Files (Inputs & Outputs)","description":"","frontmatter":{},"headers":[],"relativePath":"guide/multiple-output.md","filePath":"guide/multiple-output.md"}'),r={name:"guide/multiple-output.md"};function h(a,t,u,d,c,g){return o(),l("div",null,[t[10]||(t[10]=s("",18)),e("p",null,[t[0]||(t[0]=i("The built-in ")),t[1]||(t[1]=e("code",null,"polish_multiple.yaml",-1)),t[2]||(t[2]=i(" agent (which inherits from ")),t[3]||(t[3]=e("code",null,"polish",-1)),t[4]||(t[4]=i(") demonstrates how prompts need to be structured to request and format multiple outputs within the ")),t[5]||(t[5]=e("code",null,"<latex_documents>",-1)),t[6]||(t[6]=i(" tag. Its ")),t[7]||(t[7]=e("code",null,"userRequest",-1)),t[8]||(t[8]=i(" prompt explicitly asks the model to structure its response like this, referencing the ")),e("code",null,p(a.OUTPUT_FILES_ORDER),1),t[9]||(t[9]=i(" variable which contains the comma-separated list of filenames from the UI:"))]),t[11]||(t[11]=s("",12))])}const f=n(r,[["render",h]]);export{k as __pageData,f as default};
