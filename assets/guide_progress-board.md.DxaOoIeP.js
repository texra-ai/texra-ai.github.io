import{_ as o,c as t,o as s,a2 as r}from"./chunks/framework.D30IVGRC.js";const a="/images/progress-board-layout.png",f=JSON.parse('{"title":"ProgressBoard","description":"","frontmatter":{},"headers":[],"relativePath":"guide/progress-board.md","filePath":"guide/progress-board.md"}'),i={name:"guide/progress-board.md"};function n(l,e,c,d,g,h){return s(),t("div",null,e[0]||(e[0]=[r('<h1 id="progressboard" tabindex="-1">ProgressBoard <a class="header-anchor" href="#progressboard" aria-label="Permalink to &quot;ProgressBoard&quot;">​</a></h1><p>The ProgressBoard is TeXRA&#39;s central hub for monitoring agent execution, viewing detailed logs, and managing past runs. Think of it as the mission control center for your AI assistant – essential for understanding what&#39;s happening under the hood and troubleshooting when things go sideways.</p><h2 id="accessing-the-progressboard" tabindex="-1">Accessing the ProgressBoard <a class="header-anchor" href="#accessing-the-progressboard" aria-label="Permalink to &quot;Accessing the ProgressBoard&quot;">​</a></h2><p>The ProgressBoard typically appears in the <strong>Panel area</strong> at the bottom of your VS Code window.</p><ul><li><strong>Automatic</strong>: It often opens automatically when you execute an agent.</li><li><strong>Manual</strong>: If it&#39;s closed, you can open it via the Command Palette (<code>Ctrl+Shift+P</code> or <code>Cmd+Shift+P</code>) by searching for <code>View: Show TeXRA ProgressBoard</code>.</li></ul><p><img src="'+a+'" alt="ProgressBoard Layout Placeholder"></p><h2 id="layout-overview" tabindex="-1">Layout Overview <a class="header-anchor" href="#layout-overview" aria-label="Permalink to &quot;Layout Overview&quot;">​</a></h2><p>The ProgressBoard interface is split into two main sections (usually side-by-side, but configurable):</p><ol><li><strong>Stream Tabs</strong>: A list on the side (often right) showing different agent runs (streams).</li><li><strong>Content Area</strong>: The main area (often left) displaying the header and log details for the currently selected stream.</li></ol><h2 id="stream-tabs-section" tabindex="-1">Stream Tabs Section <a class="header-anchor" href="#stream-tabs-section" aria-label="Permalink to &quot;Stream Tabs Section&quot;">​</a></h2><p>This section lists all the agent execution streams from your current VS Code session.</p><ul><li><strong>Switching Streams</strong>: Click on a stream name (e.g., <code>polish@sonnet37: paper.tex</code>) to view its specific logs and status in the Content Area.</li><li><strong>Delete All</strong>: The <i class="codicon codicon-trash"></i> <strong>Delete All</strong> button at the bottom permanently removes all streams and their logs from the ProgressBoard view for the current session.</li></ul><h2 id="content-area" tabindex="-1">Content Area <a class="header-anchor" href="#content-area" aria-label="Permalink to &quot;Content Area&quot;">​</a></h2><p>This area shows the details for the stream selected in the Stream Tabs section.</p><h3 id="header" tabindex="-1">Header <a class="header-anchor" href="#header" aria-label="Permalink to &quot;Header&quot;">​</a></h3><p>The header provides a summary and actions for the selected stream:</p><ul><li><strong>Stream Name</strong>: Displays the identifier of the current run (e.g., <code>agent@model: inputFile</code>).</li><li><strong>Status Indicator</strong>: A colored circle shows the current status: <ul><li><strong>Green (Running)</strong>: The agent is actively processing.</li><li><strong>Grey (Stopped)</strong>: The agent finished successfully or was stopped manually before completion.</li><li><strong>Red (Error)</strong>: The agent encountered an error during execution.</li><li><strong>Yellow (Ready/Initial)</strong>: The view is ready, but no stream is active yet.</li></ul></li><li><strong>Stream Header Actions</strong>: <ul><li><i class="codicon codicon-debug-stop"></i> <strong>Stop</strong>: Attempts to gracefully stop the currently running task for this stream. Note that the current API call (if any) will complete first.</li><li><i class="codicon codicon-debug-rerun"></i> <strong>Run Again</strong>: Re-runs the task associated with this stream using the <em>exact same configuration</em> (agent, model, files, instruction) that was used when it originally ran. Useful for retrying failed tasks or reproducing results.</li><li><i class="codicon codicon-reply"></i> <strong>Restore</strong>: Loads the configuration (agent, model, files, instruction) from this stream back into the main TeXRA webview interface. This allows you to easily modify and re-run a previous task.</li><li><i class="codicon codicon-diff-multiple"></i> <strong>Diff</strong>: Triggers the <code>latexdiff</code> process to compare the original input file(s) with the generated output <code>.tex</code> file(s) from this stream. Generates <code>_diff_rN.tex</code> and <code>_diff_rN-rM.tex</code> files. Requires <code>latexdiff</code> to be installed. See <a href="./latex-diff.html">LaTeX Diff</a>.</li><li><i class="codicon codicon-archive"></i> <strong>Pack</strong>: Archives the output files and log for this stream into the <code>History</code> folder. See <a href="./file-management.html">File Management</a>.</li><li><i class="codicon codicon-trash"></i> <strong>Clean</strong>: Deletes the output files associated with this stream.</li><li><i class="codicon codicon-clear-all"></i> <strong>Erase</strong>: Removes this stream and its log content entirely from the ProgressBoard.</li></ul></li></ul><h3 id="log-content" tabindex="-1">Log Content <a class="header-anchor" href="#log-content" aria-label="Permalink to &quot;Log Content&quot;">​</a></h3><p>This scrollable area displays the detailed, timestamped logs for the selected agent run.</p><ul><li><strong>Structure</strong>: Logs are organized into expandable/collapsible groups (e.g., <code>Initialization</code>, <code>Round 0</code>, <code>Model Operation</code>, <code>Response Cycle</code>) allowing you to focus on specific stages. Click the arrow next to a group name to toggle it.</li><li><strong>Log Levels</strong>: Messages are prefixed with levels like <code>INFO</code>, <code>DEBUG</code>, <code>WARN</code>, <code>ERROR</code> to indicate severity. Verbose debug messages (<code>DEBUG</code>) are only shown if <code>texra.logger.verboseOutput</code> is enabled in settings.</li><li><strong>Agent Thinking</strong>: Look for entries indicating <code>&lt;scratchpad&gt;</code> content or <code>Thinking:</code> blocks, which show the intermediate reasoning steps of the AI model (especially for CoT agents).</li><li><strong>Errors</strong>: Errors are highlighted, often providing clues if something went wrong.</li></ul><p>Understanding the log content is key to diagnosing problems and seeing how TeXRA and the AI models process your requests. Refer to the <a href="./../reference/troubleshooting.html">Troubleshooting</a> guide for more tips on using logs.</p><p>At the bottom of the tab list, there is a &quot;Delete All&quot; button (<i class="codicon codicon-close-all"></i>) that allows you to clear all streams and their associated logs from the ProgressBoard view.</p>',22)]))}const m=o(i,[["render",n]]);export{f as __pageData,m as default};
