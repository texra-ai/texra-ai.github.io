import{_ as e,c as a,o as s,a2 as t}from"./chunks/framework.D30IVGRC.js";const u=JSON.parse('{"title":"Working with TikZ Figures","description":"","frontmatter":{},"headers":[],"relativePath":"guide/tikz-figures.md","filePath":"guide/tikz-figures.md"}'),n={name:"guide/tikz-figures.md"};function r(o,i,l,h,c,p){return s(),a("div",null,i[0]||(i[0]=[t(`<h1 id="working-with-tikz-figures" tabindex="-1">Working with TikZ Figures <a class="header-anchor" href="#working-with-tikz-figures" aria-label="Permalink to &quot;Working with TikZ Figures&quot;">​</a></h1><p><a href="https://github.com/pgf-tikz/pgf" target="_blank" rel="noreferrer">TikZ</a> is a powerful LaTeX package for creating vector graphics programmatically. It&#39;s widely used in academia for diagrams, plots, and technical illustrations due to its high quality and seamless LaTeX integration. While mastering TikZ can feel like learning a new language, TeXRA is here to help!</p><p>TeXRA offers specialized features for working with TikZ, leveraging the <code>draw</code> agent and specific extraction/compilation tools. This guide focuses on TikZ-specific workflows.</p><div class="tip custom-block"><p class="custom-block-title">General Media Handling</p><p>For information on managing other types of figures (like standard images or PDFs) and general media selection in the UI, see the <a href="./working-with-figures.html">Working with Figures</a> guide.</p></div><h2 id="what-is-tikz-a-brief-intro" tabindex="-1">What is TikZ? (A Brief Intro) <a class="header-anchor" href="#what-is-tikz-a-brief-intro" aria-label="Permalink to &quot;What is TikZ? (A Brief Intro)&quot;">​</a></h2><p>Instead of using a graphical editor, TikZ lets you describe graphics using commands within your LaTeX document. For example:</p><div class="language-latex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">latex</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\\documentclass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[tikz, border=2mm]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">standalone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\\usepackage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tikz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\begin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{document}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\begin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{tikzpicture}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\draw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[blue, thick] (0,0) circle (1cm);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> at (0,0) {Hello!};</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{tikzpicture}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{document}</span></span></code></pre></div><p>This code draws a blue circle with text inside. TeXRA&#39;s tools help manage and generate this kind of code.</p><h2 id="the-draw-agent" tabindex="-1">The <code>draw</code> Agent <a class="header-anchor" href="#the-draw-agent" aria-label="Permalink to &quot;The \`draw\` Agent&quot;">​</a></h2><p>TeXRA&#39;s <code>draw</code> agent is specifically designed to work with TikZ figures (think of it as your AI graphics assistant). It can:</p><ol><li><strong>Create new TikZ figures</strong> based on textual descriptions.</li><li><strong>Enhance existing figures</strong> with improvements or additions.</li><li><strong>Fix errors</strong> or issues in TikZ code.</li><li><strong>Add annotations</strong> or labels to diagrams.</li></ol><h3 id="creating-new-figures" tabindex="-1">Creating New Figures <a class="header-anchor" href="#creating-new-figures" aria-label="Permalink to &quot;Creating New Figures&quot;">​</a></h3><p>To create a new TikZ figure:</p><ol><li>Select the agent: <code>draw</code></li><li>Choose a model (Models like <code>o1</code>, <code>sonnet37T</code>, or <code>gemini25p</code> are often good choices for complex drawing tasks).</li><li>Provide a detailed description of the desired figure</li><li>Execute the agent</li></ol><p><strong>Example instruction:</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Create a TikZ figure showing a flowchart of the machine learning pipeline</span></span>
<span class="line"><span>described in Section 2. Include the following steps: data collection,</span></span>
<span class="line"><span>preprocessing, feature extraction, model training, and evaluation.</span></span>
<span class="line"><span>Connect the steps with arrows and add appropriate labels.</span></span></code></pre></div><h3 id="enhancing-existing-figures" tabindex="-1">Enhancing Existing Figures <a class="header-anchor" href="#enhancing-existing-figures" aria-label="Permalink to &quot;Enhancing Existing Figures&quot;">​</a></h3><p>To enhance an existing figure:</p><ol><li>Select the input file containing the TikZ code</li><li>Select the <code>draw</code> agent</li><li>Provide instructions for the desired improvements</li><li>Execute the agent</li></ol><p><strong>Example instruction:</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>Enhance the existing TikZ figure to add color coding for different components.</span></span>
<span class="line"><span>Use blue for input components, green for processing steps, and red for output.</span></span>
<span class="line"><span>Add a legend explaining the color scheme and improve the layout for better readability.</span></span></code></pre></div><h2 id="tikz-extraction" tabindex="-1">TikZ Extraction <a class="header-anchor" href="#tikz-extraction" aria-label="Permalink to &quot;TikZ Extraction&quot;">​</a></h2><p>TeXRA can automatically extract TikZ figures from your LaTeX documents for separate processing and management.</p><h3 id="automatic-extraction" tabindex="-1">Automatic Extraction <a class="header-anchor" href="#automatic-extraction" aria-label="Permalink to &quot;Automatic Extraction&quot;">​</a></h3><p>To enable automatic TikZ extraction:</p><ol><li>Click on the &quot;Auto Extract&quot; dropdown near the Figure selection</li><li>Enable &quot;TikZ Figures&quot;</li><li>Select your input file(s)</li><li>Execute your chosen agent</li></ol><p>When automatic extraction is enabled, TeXRA will:</p><ol><li>Scan your LaTeX documents for TikZ environments</li><li>Extract each figure as a separate file</li><li>Compile the figures to create PNG previews</li><li>Make both the TikZ code and previews available to the agent</li></ol><h3 id="manual-extraction-commands" tabindex="-1">Manual Extraction Commands <a class="header-anchor" href="#manual-extraction-commands" aria-label="Permalink to &quot;Manual Extraction Commands&quot;">​</a></h3><p>You can also extract TikZ figures manually using VSCode commands:</p><ol><li>Open a LaTeX file containing TikZ figures</li><li>Open the Command Palette (Ctrl+Shift+P or Cmd+Shift+P on macOS)</li><li>Run &quot;TeXRA: Extract TikZ Figures from Current File&quot;</li></ol><p>This will create standalone files for each TikZ figure in your document.</p><h2 id="tikz-compilation" tabindex="-1">TikZ Compilation <a class="header-anchor" href="#tikz-compilation" aria-label="Permalink to &quot;TikZ Compilation&quot;">​</a></h2><p>Once extracted, TikZ figures can be compiled into viewable images:</p><h3 id="automatic-compilation" tabindex="-1">Automatic Compilation <a class="header-anchor" href="#automatic-compilation" aria-label="Permalink to &quot;Automatic Compilation&quot;">​</a></h3><p>When using the automatic extraction feature, TeXRA will:</p><ol><li>Create a standalone LaTeX document for each TikZ figure</li><li>Compile it using your LaTeX distribution</li><li>Convert the resulting PDF to PNG for viewing</li></ol><h3 id="manual-compilation" tabindex="-1">Manual Compilation <a class="header-anchor" href="#manual-compilation" aria-label="Permalink to &quot;Manual Compilation&quot;">​</a></h3><p>You can manually compile extracted figures:</p><ol><li>Open the Command Palette</li><li>Run &quot;TeXRA: Compile TikZ Figures from Current File&quot;</li></ol><p>This will compile all extracted figures and generate preview images.</p><h2 id="customizing-tikz-processing" tabindex="-1">Customizing TikZ Processing <a class="header-anchor" href="#customizing-tikz-processing" aria-label="Permalink to &quot;Customizing TikZ Processing&quot;">​</a></h2><p>You can customize how TeXRA handles TikZ figures through several settings:</p><h3 id="tikz-template" tabindex="-1">TikZ Template <a class="header-anchor" href="#tikz-template" aria-label="Permalink to &quot;TikZ Template&quot;">​</a></h3><p>The TikZ template determines the standalone document structure used for extracted figures:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;texra.latex.tikzTemplate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">documentclass[tikz,border=10pt]{standalone}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usepackage{tikz}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usepackage{pgfplots}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usetikzlibrary{positioning}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usetikzlibrary{patterns}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usetikzlibrary{arrows.meta, shapes.geometric, matrix, calc, decorations.pathreplacing}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usetikzlibrary{shapes, arrows}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n\\n\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">begin{document}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{{ tikzpicture }}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">end{document}&quot;</span></span></code></pre></div><p>Customize this template to include additional packages or settings required by your figures.</p><h3 id="tikz-input-directory" tabindex="-1">TikZ Input Directory <a class="header-anchor" href="#tikz-input-directory" aria-label="Permalink to &quot;TikZ Input Directory&quot;">​</a></h3><p>If your TikZ figures depend on custom styles or macros, you can specify an input directory:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;texra.latex.tikzInputDirectory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/tikz/inputs&quot;</span></span></code></pre></div><p>This directory will be added to the LaTeX search path when compiling figures.</p><h3 id="including-workspace-in-texinputs" tabindex="-1">Including Workspace in TEXINPUTS <a class="header-anchor" href="#including-workspace-in-texinputs" aria-label="Permalink to &quot;Including Workspace in TEXINPUTS&quot;">​</a></h3><p>By default, TeXRA includes your workspace root in the TEXINPUTS environment variable:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;texra.latex.includeWorkspaceInTexinputs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><p>This helps LaTeX find packages and styles located elsewhere in your project.</p><h2 id="figure-libraries" tabindex="-1">Figure Libraries <a class="header-anchor" href="#figure-libraries" aria-label="Permalink to &quot;Figure Libraries&quot;">​</a></h2><p>The <code>draw</code> agent can utilize existing figures as references when creating new ones.</p><h3 id="using-reference-figures" tabindex="-1">Using Reference Figures <a class="header-anchor" href="#using-reference-figures" aria-label="Permalink to &quot;Using Reference Figures&quot;">​</a></h3><p>To leverage existing figures as references:</p><ol><li>Add previous TikZ figures as reference files</li><li>Mention them specifically in your instructions</li><li>Ask the agent to adopt similar styles or approaches</li></ol><p><strong>Example instruction:</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Create a TikZ diagram of a neural network architecture similar to the one in</span></span>
<span class="line"><span>the reference file, but add an attention mechanism between the encoder and decoder.</span></span>
<span class="line"><span>Maintain the same visual style and color scheme as the reference figure.</span></span></code></pre></div><h2 id="troubleshooting-tikz-issues" tabindex="-1">Troubleshooting TikZ Issues <a class="header-anchor" href="#troubleshooting-tikz-issues" aria-label="Permalink to &quot;Troubleshooting TikZ Issues&quot;">​</a></h2><h3 id="compilation-errors" tabindex="-1">Compilation Errors <a class="header-anchor" href="#compilation-errors" aria-label="Permalink to &quot;Compilation Errors&quot;">​</a></h3><p>If TikZ figures fail to compile:</p><ol><li>Check the LaTeX log for specific error messages (look in the build directory)</li><li>Verify that all required TikZ libraries are included in the template</li><li>Ensure your LaTeX distribution has the necessary packages</li><li>Try simplifying complex figures that might exceed compiler limits</li></ol><h3 id="missing-packages" tabindex="-1">Missing Packages <a class="header-anchor" href="#missing-packages" aria-label="Permalink to &quot;Missing Packages&quot;">​</a></h3><p>If compilation fails due to missing packages:</p><ol><li>Install the required packages through your LaTeX distribution manager</li><li>Add the packages to your TikZ template</li><li>Ensure package paths are correctly included in TEXINPUTS</li></ol><h3 id="figure-size-issues" tabindex="-1">Figure Size Issues <a class="header-anchor" href="#figure-size-issues" aria-label="Permalink to &quot;Figure Size Issues&quot;">​</a></h3><p>For figures that are too large or small:</p><ol><li>Adjust the <code>border</code> parameter in the standalone document class</li><li>Scale the figure using TikZ&#39;s <code>scale</code> option</li><li>Resize specific elements rather than the entire figure</li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="effective-tikz-instructions" tabindex="-1">Effective TikZ Instructions <a class="header-anchor" href="#effective-tikz-instructions" aria-label="Permalink to &quot;Effective TikZ Instructions&quot;">​</a></h3><p>For best results with the <code>draw</code> agent:</p><ol><li><strong>Be Specific</strong>: Clearly describe all elements and their relationships</li><li><strong>Provide Context</strong>: Include the purpose and intended audience</li><li><strong>Specify Style</strong>: Mention colors, line styles, and text formatting</li><li><strong>Reference Examples</strong>: Point to similar figures when possible</li></ol><h3 id="figure-organization" tabindex="-1">Figure Organization <a class="header-anchor" href="#figure-organization" aria-label="Permalink to &quot;Figure Organization&quot;">​</a></h3><p>Organize your TikZ figures effectively:</p><ol><li>Use consistent naming conventions for figures</li><li>Store extracted figures in a dedicated directory</li><li>Include comments in TikZ code explaining complex parts</li><li>Maintain a library of reusable figure components</li></ol><h3 id="performance-considerations" tabindex="-1">Performance Considerations <a class="header-anchor" href="#performance-considerations" aria-label="Permalink to &quot;Performance Considerations&quot;">​</a></h3><p>TikZ compilation can be resource-intensive:</p><ol><li>Split very complex figures into multiple smaller ones</li><li>Use the <code>external</code> library for caching compiled figures</li><li>Consider simplified versions for drafts and detailed versions for final documents</li></ol><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Now that you understand how to work with TikZ figures in TeXRA, you might want to explore:</p><ul><li><a href="/guide/latex-diff.html">LaTeX Diff</a> - Learn how to compare document versions including figures</li><li><a href="/guide/tool-integration.html">Tool Integration</a> - Discover other tools TeXRA integrates with</li><li><a href="/reference/best-practices.html">Best Practices</a> - Learn general best practices for working with TeXRA</li></ul>`,85)]))}const g=e(n,[["render",r]]);export{u as __pageData,g as default};
