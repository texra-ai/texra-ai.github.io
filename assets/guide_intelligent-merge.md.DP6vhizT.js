import{_ as t,c as o,o as i,a2 as n}from"./chunks/framework.D30IVGRC.js";const u=JSON.parse('{"title":"Intelligent Merge Workflow","description":"","frontmatter":{},"headers":[],"relativePath":"guide/intelligent-merge.md","filePath":"guide/intelligent-merge.md"}'),a={name:"guide/intelligent-merge.md"};function l(r,e,s,c,d,h){return i(),o("div",null,e[0]||(e[0]=[n('<h1 id="intelligent-merge-workflow" tabindex="-1">Intelligent Merge Workflow <a class="header-anchor" href="#intelligent-merge-workflow" aria-label="Permalink to &quot;Intelligent Merge Workflow&quot;">​</a></h1><h2 id="the-problem-partial-agent-outputs" tabindex="-1">The Problem: Partial Agent Outputs <a class="header-anchor" href="#the-problem-partial-agent-outputs" aria-label="Permalink to &quot;The Problem: Partial Agent Outputs&quot;">​</a></h2><p>When you run agents like <code>correct</code> or <code>polish</code>, the AI might intelligently focus its changes on specific sections, potentially resulting in an output file (<code>*_r0_*.tex</code> or <code>*_r1_*.tex</code>) that only contains the modified parts, not the entire document. While this saves processing time and tokens, comparing this partial output directly against your full original document using <code>latexdiff</code> wouldn&#39;t produce a meaningful result.</p><h2 id="the-solution-intelligent-merge-button" tabindex="-1">The Solution: Intelligent Merge Button <a class="header-anchor" href="#the-solution-intelligent-merge-button" aria-label="Permalink to &quot;The Solution: Intelligent Merge Button&quot;">​</a></h2><p>TeXRA&#39;s <strong>Intelligent Merge</strong> workflow solves this problem. It uses an LLM to combine your original <strong>Base File</strong> with the agent&#39;s (potentially partial) <strong>Edited File</strong> to generate a new, <strong>complete</strong> document that incorporates the AI&#39;s changes.</p><p>This generated <em>full</em> document can then be cleanly compared against your original base file using <code>latexdiff</code>.</p><h2 id="the-merge-workflow" tabindex="-1">The Merge Workflow <a class="header-anchor" href="#the-merge-workflow" aria-label="Permalink to &quot;The Merge Workflow&quot;">​</a></h2><p>Access the merge functionality via the &quot;LaTeXdiffs&quot; section (<i class="codicon codicon-source-control"></i> LaTeXDiffs) in the main TeXRA interface:</p><ol><li><strong>Select Base File</strong>: Choose the original document you want to merge changes <em>into</em> using the &quot;Base File&quot; dropdown (<i class="codicon codicon-file"></i> Base).</li><li><strong>Select Edited File</strong>: Choose the document containing the suggested changes using the &quot;Edited File&quot; dropdown (<i class="codicon codicon-edit"></i> Edited).</li><li><strong>Choose Merge Model</strong>: Select an appropriate language model from the main Model dropdown (<i class="codicon codicon-robot"></i> Model) below the instruction box. Models capable of strong reasoning (like GPT-4, Claude 3 Opus) are recommended for complex merges.</li><li><strong>Click Merge</strong>: Press the &quot;Merge&quot; button (<i class="codicon codicon-merge"></i>) located in the &quot;Edited File&quot; row.</li></ol><p>TeXRA will then invoke the specialized <code>merge</code> agent:</p><ul><li>The agent receives the base file, the edited file, and the selected model.</li><li>It analyzes both versions to identify meaningful differences.</li><li>It generates a new file (e.g., <code>base_merge_r0_model.tex</code>) containing the content of the base file updated with the accepted changes from the edited file.</li><li>The process and results can be monitored in the <a href="./progress-board.html">ProgressBoard</a>.</li></ul><h2 id="what-happens-behind-the-scenes" tabindex="-1">What Happens Behind the Scenes <a class="header-anchor" href="#what-happens-behind-the-scenes" aria-label="Permalink to &quot;What Happens Behind the Scenes&quot;">​</a></h2><p>When you click the Merge button (prepare for some AI wizardry):</p><ol><li>TeXRA sends the content of both the Base File and the Edited File to a selected AI model (defaults can be configured in settings, <code>sonnet37</code> is often a good choice).</li><li>The model is instructed to intelligently synthesize a new, complete document that preserves the structure and unchanged content of the Base File while incorporating the modifications present in the Edited File.</li><li>TeXRA saves this synthesized result.</li></ol><h2 id="the-output-a-complete-merged-file" tabindex="-1">The Output: A Complete, Merged File <a class="header-anchor" href="#the-output-a-complete-merged-file" aria-label="Permalink to &quot;The Output: A Complete, Merged File&quot;">​</a></h2><p>The merge process generates a new file, typically named following the pattern:</p><p><code>basename_agent_rX_full_model.tex</code></p><p>(e.g., <code>paper_polish_r0_full_sonnet37.tex</code>)</p><p>This <code>_full_</code> file contains the complete document content, incorporating the changes from the agent&#39;s output.</p><p><strong>Crucially, this <code>_full_*.tex</code> file is now ready to be compared against your original <code>basename.tex</code> using the <code>latexdiff</code> command (either via the UI button or automatically if configured) to clearly visualize the changes the agent effectively made.</strong></p><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li><a href="./latex-diff.html">LaTeX Diff</a>: Learn how to use <code>latexdiff</code> to compare the merged (<code>_full_</code>) file with your original.</li><li><a href="./built-in-agents.html">Built-in Agents</a>: Review the agents whose outputs you might want to merge.</li></ul>',22)]))}const p=t(a,[["render",l]]);export{u as __pageData,p as default};
